version: "3.91"
services:

  app:
    build:
      context: ./backend/ 
      dockerfile: Dockerfile      
    image: master-image       
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT 
    environment:
      - mongo_url=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${mongo_host}:${mongo_port}/${MONGO_INITDB_DATABASE}?authSource=admin   
      - mongo_work_db=${MONGO_INITDB_DATABASE}
      - TZ=${timezone} 
      - redis_url=${redis_url}       
    volumes: 
      - type: bind
        source: ${code_source}
        target: /app  
    command: python server.py        
    #    volume:
    #      nocopy: true  # flag to disable copying of data from a container when a volume is created      
    #./init-db.js:/docker-entrypoint-initdb.d/init-db.js:ro
    #expose:
    #  - ${mongo_port}      
    ports:
      - "${app_ports}"
    depends_on:
      - db
    networks:
      - backnet
      - frontnet
  db:
    image: mongo:6.0.4
    hostname: ${mongo_host}   
    #restart: always    
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodata:/data/db    
      - mongo_conf:/data/configdb       
      #- type: bind
      # source: "/c/Users/ivolochkov/YandexDisk/mongo_data"
      #  target: /data/db/        
    #    volume:
    #      nocopy: true  # flag to disable copying of data from a container when a volume is created      
    #./init-db.js:/docker-entrypoint-initdb.d/init-db.js:ro
    #expose:
    #  - ${mongo_port}
    ports:
      - "${mongo_port}:${mongo_port}"    
    networks:
     - backnet
     
  worker:
    image: master-image 
    environment: 
      - redis_url=${redis_url} 
      - TZ=${timezone}     
      - mongo_url=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${mongo_host}:${mongo_port}/${MONGO_INITDB_DATABASE}?authSource=admin   
      - mongo_work_db=${MONGO_INITDB_DATABASE}     
    volumes: 
      - type: bind
        source: ${code_source}
        target: /app     
    command: python worker.py        
    depends_on:
      - redis
    networks:
      - backnet
      - frontnet

     
  redis:
    hostname: redis    
    image: redis:7.0.8-bullseye  
    ports:
      - "6379:6379"      
    networks:
     - backnet      
networks:
  backnet:
    #driver: bridge#overlay
    #internal: true
  frontnet:
  
volumes:
  mongodata: 
  mongo_conf:   